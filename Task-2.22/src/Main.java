import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        //üí°- –í–≤–µ—Å—Ç–∏ —Å –∫–æ–Ω—Å–æ–ª–∏ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–∞: 31.12.2020, —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–ª–∞—Å—Å–∞ Date (–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–≤ –≤–≤–µ–¥–µ–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º SimpleDateFormat)
        //
        //üí°- –£–≤–µ–ª–∏—á–∏—Ç—å –¥–∞—Ç—É –Ω–∞ 45 –¥–Ω–µ–π –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
        //
        //üí°- –°–¥–≤–∏–Ω—É—Ç—å –¥–∞—Ç—É –Ω–∞ –Ω–∞—á–∞–ª–æ –≥–æ–¥–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
        //
        //üí°- –£–≤–µ–ª–∏—á–∏—Ç—å –¥–∞—Ç—É –Ω–∞ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π (—Å—á–∏—Ç–∞–µ–º —Å—É–±–±–æ—Ç—ã –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è –≤—ã—Ö–æ–¥–Ω—ã–º–∏) –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω
        //
        //üí°- –í–≤–µ—Å—Ç–∏ —Å –∫–æ–Ω—Å–æ–ª–∏ –≤—Ç–æ—Ä—É—é –¥–∞—Ç—É –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–µ –≤ –¥—Ä—É–≥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–ª–∞—Å—Å–∞ Date
        //
        //üí°- –ü–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π (—Å—É–±–±–æ—Ç—ã –∏ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è - –≤—ã—Ö–æ–¥–Ω—ã–µ) –º–µ–∂–¥—É –ø–µ—Ä–≤–æ–π –∏ –≤—Ç–æ—Ä–æ–π –¥–∞—Ç–∞–º–∏ –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ —Å –∫–æ–Ω—Å–æ–ª–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –Ω–∞ —ç–∫—Ä–∞–Ω

        Scanner sin = new Scanner(System.in);
        System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy:");
        String str1 = sin.nextLine();
        SimpleDateFormat init = new SimpleDateFormat("dd.MM.yyyy");
        Date date = null;
        try {
            date = init.parse(str1);

        } catch (ParseException e) {
            System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã!(–í–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: '–¥–¥.–º–º.–≥–≥–≥–≥')");
        }
        if (date == null) {
            return;
        }
        GregorianCalendar gc = new GregorianCalendar();
        gc.setTime(date);
        gc.add(Calendar.DATE, 45);
        System.out.println("–î–∞—Ç–∞ –ø–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 45 –¥–Ω–µ–π: " + init.format(gc.getTime()));

        gc.set(Calendar.DATE, 1);
        gc.set(Calendar.MONTH, 0);
        System.out.println("–î–∞—Ç–∞ –ø–æ—Å–ª–µ —Å–¥–≤–∏–≥–∞ –Ω–∞ –Ω–∞—á–∞–ª–æ –≥–æ–¥–∞: " + init.format(gc.getTime()));

        gc.setTime(date);
        int workDays = 10;
        int c = 0;
        while (c < workDays) {
            gc.add(Calendar.DATE, 1);
            if (!(gc.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY || gc.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY)) {
                c++;
            }
        }
        System.out.println("–î–∞—Ç–∞ –ø–æ—Å–ª–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –Ω–∞ 10 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π: " + init.format(gc.getTime()));


        System.out.print("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ dd.MM.yyyy:");
        String str2 = sin.nextLine();
        Date date2 = null;
        try {
            date2 = init.parse(str2);

        } catch (ParseException e) {
            System.out.println("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞—Ç—ã!(–í–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: '–¥–¥.–º–º.–≥–≥–≥–≥')");
        }
        if (date2 == null) {
            return;
        }
        GregorianCalendar gc2 = new GregorianCalendar();
        gc.setTime(date);
        gc2.setTime(date2);
        c = 0;
        if (gc.before(gc2)) {
            gc.setTime(date2);
            gc2.setTime(date);
        }
        while (gc.get(Calendar.DATE) != gc2.get(Calendar.DATE)) {
            gc2.add(Calendar.DATE, 1);
            if (!(gc2.get(Calendar.DAY_OF_WEEK) == Calendar.SATURDAY || gc2.get(Calendar.DAY_OF_WEEK) == Calendar.SUNDAY)) {
                c++;
            }
        }
        System.out.println("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π –º–µ–∂–¥—É –≤–≤–µ–¥–µ–Ω–Ω—ã–º–∏ –¥–∞—Ç–∞–º–∏: " + c);
    }
}